{"version":3,"sources":["components/Navbar.js","components/Home.js","components/Recipe.js","components/Create.js","components/Edit.js","App.js","index.js"],"names":["Navbar","props","className","to","Home","getRecipes","fetch","method","redirect","then","res","text","responses","JSON","parse","data","setState","recipes","catch","error","console","log","componentWillMount","state","this","map","recipe","_id","src","image","alt","title","Component","Recipe","getID","id","match","params","getRecipe","response","ingredients","steps","checkDelete","delete","deleted","noDelete","onClick","ingredient","name","quantity","step","i","instruction","selectImages","event","target","files","handleStepAdd","preventDefault","values","push","handleStepDelete","splice","handleStep","value","handleIngredientAdd","handleIngredientDelete","handleIngredient","handleChange","handleSubmit","createRecipe","err","type","j","length","errorMessages","formdata","FormData","append","stringify","body","result","status","message","infoUploaded","onSubmit","onChange","accept","Edit","imageUrl","updateRecipe","requestOptions","infoUpdated","App","path","exact","component","Create","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e22c02c5.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Navbar(props) {\r\n  return (\r\n    <>\r\n      <div className=\"navbar-wrap\">\r\n        <Link className=\"create\" to=\"/create\">\r\n          Add Recipe\r\n        </Link>\r\n        <span className=\"divider\"> | </span>\r\n        <Link className=\"explore\" to=\"/\">\r\n          View Recipes\r\n        </Link>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Home extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      recipes: null,\r\n    };\r\n  }\r\n\r\n  getRecipes = () => {\r\n    var requestOptions = {\r\n      method: \"GET\",\r\n      redirect: \"follow\",\r\n    };\r\n\r\n    fetch(\r\n      \"https://my-vegan-recipes.herokuapp.com/api/v1/recipes\",\r\n      requestOptions\r\n    )\r\n      .then((res) => res.text())\r\n      // .then((res) => console.log(res))\r\n      .then((res) => {\r\n        const responses = JSON.parse(res).data.data;\r\n        this.setState({ recipes: responses });\r\n      })\r\n      .catch((error) => console.log(\"error\", error));\r\n  };\r\n\r\n  componentWillMount = () => {\r\n    this.getRecipes();\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1 className=\"title\">PLATE UP ONE OF THESE RECIPES TODAY</h1>\r\n        {this.state.recipes && (\r\n          <div className=\"recipe-card-wrap\">\r\n            {this.state.recipes.map((recipe) => (\r\n              <Link\r\n                key={recipe.title}\r\n                to={`/${recipe._id}`}\r\n                className=\"recipe-card\"\r\n              >\r\n                <img\r\n                  className=\"recipe-card-img\"\r\n                  src={recipe.image}\r\n                  alt=\"\"\r\n                ></img>\r\n\r\n                <div className=\"recipe-card-title\">{recipe.title}</div>\r\n              </Link>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Recipe extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      title: null,\r\n      steps: [],\r\n      image: null,\r\n      ingredients: [],\r\n      id: null,\r\n      delete: false,\r\n      deleted: false,\r\n    };\r\n  }\r\n  getID = () => {\r\n    const id = this.props.match.params.id;\r\n    this.setState({ id }, this.getRecipe);\r\n  };\r\n\r\n  getRecipe = () => {\r\n    var requestOptions = {\r\n      method: \"GET\",\r\n      redirect: \"follow\",\r\n    };\r\n\r\n    fetch(\r\n      `https://my-vegan-recipes.herokuapp.com/api/v1/recipes/${this.state.id}`,\r\n      requestOptions\r\n    )\r\n      .then((res) => res.text())\r\n      .then((res) => {\r\n        const response = JSON.parse(res).data.data;\r\n\r\n        let data = {};\r\n        data.title = response.title;\r\n        data.image = response.image;\r\n        data.ingredients = response.ingredients;\r\n        data.steps = response.steps;\r\n\r\n        // const responses = JSON.parse(res).data.data;\r\n        this.setState(data);\r\n      })\r\n      .catch((error) => console.log(\"error\", error));\r\n  };\r\n\r\n  checkDelete = () => {\r\n    this.setState({ delete: true });\r\n  };\r\n  delete = () => {\r\n    var requestOptions = {\r\n      method: \"DELETE\",\r\n      redirect: \"follow\",\r\n    };\r\n\r\n    fetch(\r\n      `https://my-vegan-recipes.herokuapp.com/api/v1/recipes/${this.state.id}`,\r\n      requestOptions\r\n    )\r\n      .then((res) => res.text())\r\n      .then((res) => this.setState({ deleted: true }))\r\n      .catch((error) => console.log(\"error\", error));\r\n  };\r\n  noDelete = () => {\r\n    this.setState({ delete: false });\r\n  };\r\n  componentWillMount = () => {\r\n    this.getID();\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1 className=\"recipe-title\">{this.state.title}</h1>\r\n        <div className=\"recipe-buttons-wrap\">\r\n          <Link to={`/edit/${this.state.id}`}>\r\n            <button className=\"edit button\">edit</button>\r\n          </Link>\r\n\r\n          <button className=\"delete button\" onClick={this.checkDelete}>\r\n            delete\r\n          </button>\r\n        </div>\r\n\r\n        <img className=\"recipe-img\" src={this.state.image} alt=\"\"></img>\r\n\r\n        <div className=\"ingredients-wrap\">\r\n          <h2 className=\"recipe-ingredients\">Ingredients</h2>\r\n          <ol>\r\n            {this.state.ingredients.map((ingredient) => (\r\n              <li key={ingredient._id} className=\"recipe-ingredient\">\r\n                {ingredient.name} - {ingredient.quantity}\r\n              </li>\r\n            ))}\r\n          </ol>\r\n        </div>\r\n        <div className=\"steps-wrap\">\r\n          <h2 className=\"recipe-steps\">Steps</h2>\r\n          <ol>\r\n            {this.state.steps.map((step, i) => (\r\n              <li className=\"recipe-step\" key={i}>\r\n                {step.instruction}\r\n              </li>\r\n            ))}\r\n          </ol>\r\n        </div>\r\n\r\n        {this.state.delete && (\r\n          <div className=\"background\">\r\n            <h1 className=\"question\">\r\n              Are you sure you want to delete this recipe?\r\n            </h1>\r\n            <div className=\"buttons-wrap\">\r\n              <button className=\"button yes\" onClick={this.delete}>\r\n                yes\r\n              </button>\r\n\r\n              <button className=\"button no\" onClick={this.noDelete}>\r\n                no\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n        {this.state.deleted && (\r\n          <div className=\"background\">\r\n            <h1 className=\"question\">\r\n              The Recipe - {this.state.title} - has been deleted\r\n            </h1>\r\n            <Link className=\"buttons-wrap\" to=\"/\">\r\n              <button className=\"button link\">Go back Home</button>\r\n            </Link>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Recipe;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Recipe extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      title: \"Enter title\",\r\n      steps: [{ instruction: \"Enter instruction\" }],\r\n      ingredients: [\r\n        { name: \"Enter ingredient name\", quantity: \"Enter quantity\" },\r\n      ],\r\n      image: null,\r\n      errorMessages: [],\r\n      infoUploaded: false,\r\n    };\r\n  }\r\n\r\n  selectImages = (event) => {\r\n    let image = event.target.files[0];\r\n    this.setState({ image });\r\n  };\r\n  handleStepAdd = (event) => {\r\n    event.preventDefault();\r\n    var values = [...this.state.steps];\r\n    values.push({ instruction: \"Enter instruction\" });\r\n    this.setState({ steps: values });\r\n  };\r\n  handleStepDelete = (event) => {\r\n    event.preventDefault();\r\n    const { id } = event.target;\r\n    var values = [...this.state.steps];\r\n    values.splice(id, 1);\r\n    this.setState({ steps: values });\r\n  };\r\n  handleStep = (event) => {\r\n    const { id, name, value } = event.target;\r\n    var values = [...this.state.steps];\r\n    values[id][name] = value;\r\n    this.setState({ steps: values });\r\n  };\r\n  handleIngredientAdd = (event) => {\r\n    event.preventDefault();\r\n    var values = [...this.state.ingredients];\r\n    values.push({ name: \"Enter ingredient name\", quantity: \"Enter quantity\" });\r\n    this.setState({ ingredients: values });\r\n  };\r\n  handleIngredientDelete = (event) => {\r\n    event.preventDefault();\r\n    const { id } = event.target;\r\n    var values = [...this.state.ingredients];\r\n    values.splice(id, 1);\r\n    this.setState({ ingredients: values });\r\n  };\r\n  handleIngredient = (event) => {\r\n    const { id, name, value } = event.target;\r\n    var values = [...this.state.ingredients];\r\n    values[id][name] = value;\r\n    this.setState({ ingredients: values });\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.createRecipe();\r\n  };\r\n\r\n  createRecipe = () => {\r\n    var err = [];\r\n    const { steps, image, title, ingredients } = this.state;\r\n\r\n    if (image === null || title === \"Enter title\" || title === \"\") {\r\n      err.push(\"Please enter all the information\");\r\n    } else if (\r\n      !(\r\n        image.type === \"image/jpeg\" ||\r\n        image.type === \"image/jpg\" ||\r\n        image.type === \"image/png\" ||\r\n        image.type === \"image/pdf\"\r\n      )\r\n    ) {\r\n      err.push(\"Only images of type jpeg, jpg, png or pdf can be uploaded\");\r\n    }\r\n    for (var j = 0; j < steps.length; j++) {\r\n      if (\r\n        steps[j].instruction === \"Enter instruction\" ||\r\n        steps[j].instruction === \"\"\r\n      ) {\r\n        err.push(\"Please ensure all the instructions are listed properly\");\r\n        break;\r\n      }\r\n    }\r\n    for (var i = 0; i < ingredients.length; i++) {\r\n      if (\r\n        ingredients[i].name === \"Enter ingredient name\" ||\r\n        ingredients[i].name === \"\" ||\r\n        ingredients[i].quantity === \"Enter quantity\" ||\r\n        ingredients[i].quantity === \"\"\r\n      ) {\r\n        err.push(\r\n          \"Please ensure all the ingredient names and quantity are listed properly\"\r\n        );\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (err.length > 0) {\r\n      this.setState({ errorMessages: err });\r\n      return;\r\n    }\r\n\r\n    var formdata = new FormData();\r\n\r\n    formdata.append(\"steps\", JSON.stringify(steps));\r\n    formdata.append(\"ingredients\", JSON.stringify(ingredients));\r\n    formdata.append(\"title\", title);\r\n    formdata.append(\"image\", image, image.name);\r\n\r\n    var requestOptions = {\r\n      method: \"POST\",\r\n      body: formdata,\r\n      redirect: \"follow\",\r\n    };\r\n\r\n    fetch(\r\n      \"https://my-vegan-recipes.herokuapp.com/api/v1/recipes\",\r\n      requestOptions\r\n    )\r\n      .then((response) => response.text())\r\n      .then((result) => {\r\n        const res = JSON.parse(result);\r\n\r\n        if (res.status === \"error\") {\r\n          var err = [];\r\n          err.push(res.message);\r\n          this.setState({ errorMessages: err });\r\n        } else if (res.status === \"success\") {\r\n          const id = res.data.data._id;\r\n          this.setState({\r\n            infoUploaded: true,\r\n            id,\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1 className=\"title\">Create a new Vegan Recipe!</h1>\r\n        <div>\r\n          <form className=\"form-wrap\" onSubmit={this.handleSubmit}>\r\n            <div className=\"title-label label\">Title:</div>\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.title}\r\n              name=\"title\"\r\n              onChange={this.handleChange}\r\n              className=\"title-input input\"\r\n            />\r\n            <div className=\"img-label label\">Upload an image of the item:</div>\r\n            <input\r\n              type=\"file\"\r\n              onChange={this.selectImages}\r\n              accept=\".jpg, .jpeg, .png, .pdf\"\r\n              className=\"img-upload\"\r\n            />\r\n            <div>\r\n              <div className=\"label\">Ingredients required:</div>\r\n              <div className=\"ingredient-wrap\">\r\n                <span className=\"label ingredient-label\">Ingredient:</span>\r\n                <span className=\"label quantity-label\">quantity:</span>\r\n              </div>\r\n              {this.state.ingredients.map((ingredient, i) => (\r\n                <div key={i}>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={ingredient.name}\r\n                    name=\"name\"\r\n                    id={i}\r\n                    onChange={this.handleIngredient}\r\n                    className=\"input ingredient-input\"\r\n                  />\r\n                  <input\r\n                    type=\"text\"\r\n                    value={ingredient.quantity}\r\n                    name=\"quantity\"\r\n                    id={i}\r\n                    onChange={this.handleIngredient}\r\n                    className=\"input quantity-input\"\r\n                  />\r\n                  <button\r\n                    className=\"x\"\r\n                    id={i}\r\n                    onClick={this.handleIngredientDelete}\r\n                  >\r\n                    x\r\n                  </button>\r\n                </div>\r\n              ))}\r\n              <button\r\n                className=\"add\"\r\n                name=\"addIngredient\"\r\n                onClick={this.handleIngredientAdd}\r\n              >\r\n                + Add Ingredient\r\n              </button>\r\n            </div>\r\n\r\n            <div>\r\n              <div className=\"label\">Instructions:</div>\r\n              {this.state.steps.map((step, i) => (\r\n                <div key={i}>\r\n                  <span className=\"label step-label\">step {i + 1}:</span>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={step.instruction}\r\n                    name=\"instruction\"\r\n                    id={i}\r\n                    onChange={this.handleStep}\r\n                    className=\"input step-input\"\r\n                  />\r\n\r\n                  <button className=\"x\" id={i} onClick={this.handleStepDelete}>\r\n                    x\r\n                  </button>\r\n                </div>\r\n              ))}\r\n              <button\r\n                className=\"add\"\r\n                name=\"addStep\"\r\n                onClick={this.handleStepAdd}\r\n              >\r\n                + Add Instruction\r\n              </button>\r\n            </div>\r\n            <button className=\"button submit\" onClick={this.handleSubmit}>\r\n              submit\r\n            </button>\r\n            <div className=\"err-wrap\">\r\n              {this.state.errorMessages &&\r\n                this.state.errorMessages.map((err, i) => (\r\n                  <div key={i}>{err}</div>\r\n                ))}\r\n            </div>\r\n          </form>\r\n        </div>\r\n        {this.state.infoUploaded && (\r\n          <div className=\"background\">\r\n            <h1 className=\"question\">\r\n              Your recipe has been successfully uploaded!\r\n            </h1>\r\n            <Link className=\"buttons-wrap\" to={`/${this.state.id}`}>\r\n              <button className=\"button link\">View Recipe</button>\r\n            </Link>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Recipe;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Edit extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      title: \"Enter title\",\r\n      steps: [{ instruction: \"Enter instruction\" }],\r\n      ingredients: [\r\n        { name: \"Enter ingredient name\", quantity: \"Enter quantity\" },\r\n      ],\r\n      imageUrl: \"\",\r\n      image: null,\r\n      errorMessages: [],\r\n      infoUpdated: false,\r\n    };\r\n  }\r\n\r\n  getID = () => {\r\n    const id = this.props.match.params.id;\r\n    this.setState({ id }, this.getRecipe);\r\n  };\r\n\r\n  getRecipe = () => {\r\n    var requestOptions = {\r\n      method: \"GET\",\r\n      redirect: \"follow\",\r\n    };\r\n\r\n    fetch(\r\n      `https://my-vegan-recipes.herokuapp.com/api/v1/recipes/${this.state.id}`,\r\n      requestOptions\r\n    )\r\n      .then((res) => res.text())\r\n      .then((res) => {\r\n        const response = JSON.parse(res).data.data;\r\n\r\n        let data = {};\r\n        data.title = response.title;\r\n        data.imageUrl = response.image;\r\n        data.ingredients = response.ingredients;\r\n        data.steps = response.steps;\r\n\r\n        // const responses = JSON.parse(res).data.data;\r\n        this.setState(data);\r\n      })\r\n      .catch((error) => console.log(\"error\", error));\r\n  };\r\n  componentWillMount = () => {\r\n    this.getID();\r\n  };\r\n\r\n  selectImages = (event) => {\r\n    let image = event.target.files[0];\r\n    this.setState({ image });\r\n  };\r\n  handleStepAdd = (event) => {\r\n    event.preventDefault();\r\n    var values = [...this.state.steps];\r\n    values.push({ instruction: \"Enter instruction\" });\r\n    this.setState({ steps: values });\r\n  };\r\n  handleStepDelete = (event) => {\r\n    event.preventDefault();\r\n    const { id } = event.target;\r\n    var values = [...this.state.steps];\r\n    values.splice(id, 1);\r\n    this.setState({ steps: values });\r\n  };\r\n  handleStep = (event) => {\r\n    const { id, name, value } = event.target;\r\n    var values = [...this.state.steps];\r\n    values[id][name] = value;\r\n    this.setState({ steps: values });\r\n  };\r\n  handleIngredientAdd = (event) => {\r\n    event.preventDefault();\r\n    var values = [...this.state.ingredients];\r\n    values.push({ name: \"Enter ingredient name\", quantity: \"Enter quantity\" });\r\n    this.setState({ ingredients: values });\r\n  };\r\n  handleIngredientDelete = (event) => {\r\n    event.preventDefault();\r\n    const { id } = event.target;\r\n    var values = [...this.state.ingredients];\r\n    values.splice(id, 1);\r\n    this.setState({ ingredients: values });\r\n  };\r\n  handleIngredient = (event) => {\r\n    const { id, name, value } = event.target;\r\n    var values = [...this.state.ingredients];\r\n    values[id][name] = value;\r\n    this.setState({ ingredients: values });\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.updateRecipe();\r\n  };\r\n\r\n  updateRecipe = () => {\r\n    var err = [];\r\n    const { steps, image, title, ingredients } = this.state;\r\n\r\n    if (title === \"\") err.push(\"Please enter a title\");\r\n    if (\r\n      image &&\r\n      !(\r\n        image.type === \"image/jpeg\" ||\r\n        image.type === \"image/jpg\" ||\r\n        image.type === \"image/png\" ||\r\n        image.type === \"image/pdf\"\r\n      )\r\n    ) {\r\n      err.push(\"Only images of type jpeg, jpg, png or pdf can be uploaded\");\r\n    }\r\n    for (var j = 0; j < steps.length; j++) {\r\n      if (\r\n        steps[j].instruction === \"Enter instruction\" ||\r\n        steps[j].instruction === \"\"\r\n      ) {\r\n        err.push(\"Please ensure all the instructions are listed properly\");\r\n        break;\r\n      }\r\n    }\r\n    for (var i = 0; i < ingredients.length; i++) {\r\n      if (\r\n        ingredients[i].name === \"Enter ingredient name\" ||\r\n        ingredients[i].name === \"\" ||\r\n        ingredients[i].quantity === \"Enter quantity\" ||\r\n        ingredients[i].quantity === \"\"\r\n      ) {\r\n        err.push(\r\n          \"Please ensure all the ingredient names and quantity are listed properly\"\r\n        );\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (err.length > 0) {\r\n      this.setState({ errorMessages: err });\r\n      return;\r\n    }\r\n\r\n    var formdata = new FormData();\r\n\r\n    formdata.append(\"steps\", JSON.stringify(steps));\r\n    formdata.append(\"ingredients\", JSON.stringify(ingredients));\r\n    formdata.append(\"title\", title);\r\n    if (image) {\r\n      formdata.append(\"image\", image, image.name);\r\n    }\r\n\r\n    var requestOptions = {\r\n      method: \"PATCH\",\r\n      body: formdata,\r\n      redirect: \"follow\",\r\n    };\r\n\r\n    fetch(\r\n      `https://my-vegan-recipes.herokuapp.com/api/v1/recipes/${this.state.id}`,\r\n      requestOptions\r\n    )\r\n      .then((response) => response.text())\r\n\r\n      .then((result) => {\r\n        const res = JSON.parse(result);\r\n\r\n        if (res.status === \"error\") {\r\n          var err = [];\r\n          err.push(res.message);\r\n          this.setState({ errorMessages: err });\r\n        } else if (res.status === \"success\") {\r\n          this.setState({\r\n            infoUpdated: true,\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1 className=\"title\">Edit your Recipe!</h1>\r\n        <div>\r\n          <form className=\"form-wrap\" onSubmit={this.updateRecipe}>\r\n            <div className=\"title-label label\">Title:</div>\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.title}\r\n              name=\"title\"\r\n              onChange={this.handleChange}\r\n              className=\"title-input input\"\r\n            />\r\n            <div className=\"curr-img-wrap\">\r\n              <img\r\n                className=\"curr-img\"\r\n                src={this.state.imageUrl}\r\n                alt=\"OriginalImage\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"img-label label\">Upload a different image</div>\r\n            <input\r\n              type=\"file\"\r\n              onChange={this.selectImages}\r\n              accept=\".jpg, .jpeg, .png, .pdf\"\r\n              className=\"img-upload\"\r\n            />\r\n            <div>\r\n              <div className=\"label\">Ingredients required:</div>\r\n              <div className=\"ingredient-wrap\">\r\n                <span className=\"label ingredient-label\">Ingredient:</span>\r\n                <span className=\"label quantity-label\">quantity:</span>\r\n              </div>\r\n              {this.state.ingredients.map((ingredient, i) => (\r\n                <div key={i}>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={ingredient.name}\r\n                    name=\"name\"\r\n                    id={i}\r\n                    onChange={this.handleIngredient}\r\n                    className=\"input ingredient-input\"\r\n                  />\r\n                  <input\r\n                    type=\"text\"\r\n                    value={ingredient.quantity}\r\n                    name=\"quantity\"\r\n                    id={i}\r\n                    onChange={this.handleIngredient}\r\n                    className=\"input quantity-input\"\r\n                  />\r\n                  <button\r\n                    className=\"x\"\r\n                    id={i}\r\n                    onClick={this.handleIngredientDelete}\r\n                  >\r\n                    x\r\n                  </button>\r\n                </div>\r\n              ))}\r\n              <button\r\n                className=\"add\"\r\n                name=\"addIngredient\"\r\n                onClick={this.handleIngredientAdd}\r\n              >\r\n                + Add Ingredient\r\n              </button>\r\n            </div>\r\n\r\n            <div>\r\n              <div className=\"label\">Instructions:</div>\r\n              {this.state.steps.map((step, i) => (\r\n                <div key={i}>\r\n                  <span className=\"label step-label\">step {i + 1}:</span>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={step.instruction}\r\n                    name=\"instruction\"\r\n                    id={i}\r\n                    onChange={this.handleStep}\r\n                    className=\"input step-input\"\r\n                  />\r\n\r\n                  <button className=\"x\" id={i} onClick={this.handleStepDelete}>\r\n                    x\r\n                  </button>\r\n                </div>\r\n              ))}\r\n              <button\r\n                className=\"add\"\r\n                name=\"addStep\"\r\n                onClick={this.handleStepAdd}\r\n              >\r\n                + Add Instruction\r\n              </button>\r\n            </div>\r\n            <button className=\"button submit\" onClick={this.handleSubmit}>\r\n              Edit\r\n            </button>\r\n            <div className=\"err-wrap\">\r\n              {this.state.errorMessages.map((err, i) => (\r\n                <div key={i}>{err}</div>\r\n              ))}\r\n            </div>\r\n          </form>\r\n        </div>\r\n        {this.state.infoUpdated && (\r\n          <div className=\"background\">\r\n            <h1 className=\"question\">\r\n              Your recipe has been successfully updated!\r\n            </h1>\r\n            <Link className=\"buttons-wrap \" to={`/${this.state.id}`}>\r\n              <button className=\"button link\">View Recipe</button>\r\n            </Link>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Edit;\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport Navbar from \"./components/Navbar\";\nimport Home from \"./components/Home\";\nimport Recipe from \"./components/Recipe\";\nimport Create from \"./components/Create\";\nimport Edit from \"./components/Edit\";\nfunction App() {\n  // const [token, setToken] = useState();\n\n  // if(!token) {\n  //   return <SignIn2 setToken={setToken} />\n  // }\n\n  return (\n    <>\n      <Router>\n        <Navbar />\n        {/* <Home /> */}\n        <Switch>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/create\" exact component={Create} />\n          <Route path=\"/edit/:id\" exact component={Edit} />\n          <Route path=\"/:id\" exact component={Recipe} />\n        </Switch>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from 'react-dom';\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}